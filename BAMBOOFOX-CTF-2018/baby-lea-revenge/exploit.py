#!/usr/bin/env python3
import string
import hashlib
import itertools
from base64 import b64encode, b64decode
from pwn import *

def xorbytes(*args):
    L = len(args[0])
    ans = 0
    for x in args:
        assert(len(x) == L)
        ans ^= int.from_bytes(x, byteorder = "little")
    return ans.to_bytes(L, byteorder = "little")

r = remote("bamboofox.cs.nctu.edu.tw", 58791)

def solve_proof():
    line = r.recvuntil('\n').strip()
    tail = line.split(b'+')[1].strip().split(b')')[0].strip()
    result = line.split(b' == ')[1].strip()
    r.recvuntil(b':')

    for word in itertools.product(string.ascii_letters + string.digits, repeat = 4):
        head = ''.join(word).encode('ascii')
        if result.decode('ascii') == hashlib.sha256(head + tail).hexdigest():
            r.sendline(head)
            break 

solve_proof()

IV = b"STARWAR888888888"
plain = b"user=someone\x04\x04\x04\x04"
r.recvuntil("your token:")
token = b64decode(r.recvline().strip())[16:]
r.recvuntil("your authentication code:")
auth = r.recvline().strip()

new_token = IV + token + xorbytes(IV, plain, b"user=admin" + b'\x00' * 5 + b'\x24') + token

r.sendlineafter("input your token: ", b64encode(new_token))
r.sendlineafter("input your authentication code: ", auth)

print(r.recvline().decode('utf-8'))
